From: Jeremy Salwen <jeremysalwen@gmail.com>
Date: Sat, 28 May 2011 03:48:34 -0400
Subject: [PATCH] Removed spam files.

---
 .../pitch/mkspecs/features/default_post.prf        |    3 -
 .../pitch/mkspecs/features/default_pre.prf         |    2 -
 .../pitch/mkspecs/features/exclusive_builds.prf    |   81 ---------
 .../research/pitch/mkspecs/features/moc.prf        |   55 ------
 .../inferno/research/pitch/mkspecs/features/qt.prf |  188 --------------------
 .../research/pitch/mkspecs/features/qt_config.prf  |   11 --
 .../research/pitch/mkspecs/features/release.prf    |    5 -
 .../research/pitch/mkspecs/features/resources.prf  |   32 ----
 .../research/pitch/mkspecs/features/uic.prf        |   86 ---------
 .../pitch/mkspecs/features/unix/opengl.prf         |    4 -
 .../pitch/mkspecs/features/unix/thread.prf         |   14 --
 .../research/pitch/mkspecs/features/warn_off.prf   |    3 -
 usr/local/Trolltech/Qt-4.2.3/mkspecs/qconfig.pri   |   13 --
 13 files changed, 0 insertions(+), 497 deletions(-)
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/default_post.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/default_pre.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/exclusive_builds.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/moc.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/qt.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/qt_config.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/release.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/resources.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/uic.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/unix/opengl.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/unix/thread.prf
 delete mode 100644 home/inferno/research/pitch/mkspecs/features/warn_off.prf
 delete mode 100644 usr/local/Trolltech/Qt-4.2.3/mkspecs/qconfig.pri

diff --git a/home/inferno/research/pitch/mkspecs/features/default_post.prf b/home/inferno/research/pitch/mkspecs/features/default_post.prf
deleted file mode 100644
index e85c480..0000000
--- a/home/inferno/research/pitch/mkspecs/features/default_post.prf
+++ /dev/null
@@ -1,3 +0,0 @@
-CONFIG(debug, debug|release):load(debug)
-else:load(release)
-debug_and_release:load(debug_and_release)
\ No newline at end of file
diff --git a/home/inferno/research/pitch/mkspecs/features/default_pre.prf b/home/inferno/research/pitch/mkspecs/features/default_pre.prf
deleted file mode 100644
index 6442594..0000000
--- a/home/inferno/research/pitch/mkspecs/features/default_pre.prf
+++ /dev/null
@@ -1,2 +0,0 @@
-load(exclusive_builds)
-CONFIG = lex yacc warn_on debug uic resources $$CONFIG
diff --git a/home/inferno/research/pitch/mkspecs/features/exclusive_builds.prf b/home/inferno/research/pitch/mkspecs/features/exclusive_builds.prf
deleted file mode 100644
index 3fdf4e8..0000000
--- a/home/inferno/research/pitch/mkspecs/features/exclusive_builds.prf
+++ /dev/null
@@ -1,81 +0,0 @@
-# fixExclusiveOutputDirs(1config, 2config)
-# Change all output paths that references 2config to have the string 1config in them
-defineTest(fixExclusiveOutputDirs) {
-    firstBuild = $$1
-    secondBuild = $$2
-    count(ARGS, 2, greaterThan):isEqual($$list($$lower($$3)), false):appendFirstBuild = false
-    else:appendFirstBuild = true
-
-    isEmpty(QMAKE_DIR_REPLACE):QMAKE_DIR_REPLACE += OBJECTS_DIR MOC_DIR RCC_DIR
-    lessThan(firstBuild, $$secondBuild):eval($${firstBuild}_and_$${secondBuild}_target:QMAKE_DIR_REPLACE += DESTDIR)
-    else:eval($${secondBuild}_and_$${firstBuild}_target:QMAKE_DIR_REPLACE += DESTDIR)
-    for(fix, QMAKE_DIR_REPLACE) {
-        isEmpty($$fix)|isEqual($$fix, .) {
-            eval($$fix = $${firstBuild})
-        } else:contains($$list($$first($$fix)), .*$${secondBuild}.*) {
-            eval($$fix ~= s/$${secondBuild}/$${firstBuild}/gi)
-        } else:isEqual(appendFirstBuild, true):!contains($$list($$first($$fix)), .*$${firstBuild}.*) {
-            contains($$list($${first($$fix)}), .*/$):eval($$fix = $${first($$fix)}$${firstBuild})
-	    else:eval($$fix = $${first($$fix)}-$${firstBuild})
-        }
-        export($$fix)
-    }
-    return(true)
-}
-
-# addExclusiveBuilds(1config, 1name, 2config, 2name)
-# Adds two BUILDS which are exclusive to each other.
-defineTest(addExclusiveBuilds) {
-    firstBuild = $$1
-    firstBuildName = $$2
-    secondBuild = $$3
-    secondBuildName = $$4
-
-    !build_pass {
-        first_BUILDS  =
-        second_BUILDS =
-        suffix_BUILDS = Build
-
-        isEmpty(BUILDS): BUILDPERMUTATIONS = $$suffix_BUILDS
-        else: BUILDPERMUTATIONS = $$BUILDS
-
-        for(permutation, BUILDPERMUTATIONS) {
-            permutation ~= s/$${suffix_BUILDS}$//
-            isEmpty(permutation): permutationName =
-            else: permutationName = -$$permutation
-            # Makefile target rule
-            eval($${firstBuildName}$${permutation}.target  = $${firstBuild}$$lower($${permutationName}))
-	    export($${firstBuildName}$${permuation}.target)
-            # IDE name
-            eval($${firstBuildName}$${permutation}.name    = $${firstBuildName}$${permutationName})
-	    export($${firstBuildName}$${permuation}.name)
-	    # prl import CONFIG option
-            eval($${firstBuildName}$${permutation}.PRL_CONFIG  = $${firstBuild}$${permutation})
-            export($${firstBuildName}$${permuation}.PRL_CONFIG)
-            # Individual CONFIG option
-            eval($${firstBuildName}$${permutation}.CONFIG  = $${firstBuild} $${firstBuildName}Build $$eval($${permutation}.CONFIG))
-	    export($${firstBuildName}$${permuation}.CONFIG)
-
-            eval($${secondBuildName}$${permutation}.target = $${secondBuild}$$lower($${permutationName}))
-	    export($${secondBuildName}$${permuation}.target)
-            eval($${secondBuildName}$${permutation}.name   = $${secondBuildName}$${permutationName})
-	    export($${secondBuildName}$${permuation}.name)
-	    eval($${secondBuildName}$${permutation}.PRL_CONFIG  = $${secondBuild}$${permutation})
-	    export($${secondBuildName}$${permuation}.PRL_CONFIG)
-            eval($${secondBuildName}$${permutation}.CONFIG = $${secondBuild} $${secondBuildName}Build $$eval($${permutation}.CONFIG))
-	    export($${secondBuildName}$${permuation}.CONFIG)
- 
-            first_BUILDS += $${firstBuildName}$${permutation}
-            second_BUILDS += $${secondBuildName}$${permutation}
-        }
- 
-        # A mutual exclusive block.
-        CONFIG($${firstBuild}, $${firstBuild}|$${secondBuild}): BUILDS = $$first_BUILDS  $$second_BUILDS 
-        else: BUILDS = $$second_BUILDS $$first_BUILDS
-        export(BUILDS)
-    } else {
-        eval($${firstBuildName}Build:fixExclusiveOutputDirs($$firstBuild, $$secondBuild, false))
-        eval($${secondBuildName}Build:fixExclusiveOutputDirs($$secondBuild, $$firstBuild, false))
-    }
-    return(true)
-}
diff --git a/home/inferno/research/pitch/mkspecs/features/moc.prf b/home/inferno/research/pitch/mkspecs/features/moc.prf
deleted file mode 100644
index f020a38..0000000
--- a/home/inferno/research/pitch/mkspecs/features/moc.prf
+++ /dev/null
@@ -1,55 +0,0 @@
-
-#global defaults
-isEmpty(QMAKE_MOC) {
-    win32:QMAKE_MOC = $$[QT_INSTALL_BINS]\moc.exe
-    else:QMAKE_MOC = $$[QT_INSTALL_BINS]/moc
-}
-isEmpty(MOC_DIR):MOC_DIR = .
-isEmpty(QMAKE_H_MOD_MOC):QMAKE_H_MOD_MOC = moc_
-isEmpty(QMAKE_EXT_CPP_MOC):QMAKE_EXT_CPP_MOC = .moc
-
-#moc headers
-moc_header.CONFIG = moc_verify
-moc_header.dependency_type = TYPE_C
-moc_header.commands = $$QMAKE_MOC $(DEFINES) $(INCPATH) $$join(QMAKE_COMPILER_DEFINES, " -D", -D) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-moc_header.output = $$MOC_DIR/$${QMAKE_H_MOD_MOC}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
-moc_header.input = HEADERS
-moc_header.variable_out = SOURCES
-moc_header.name = MOC ${QMAKE_FILE_IN}
-silent:moc_header.commands = @echo moc ${QMAKE_FILE_IN} && $$moc_header.commands
-QMAKE_EXTRA_COMPILERS += moc_header
-
-#moc sources
-moc_source.CONFIG = no_link moc_verify
-moc_source.dependency_type = TYPE_C
-moc_source.commands = $$QMAKE_MOC $(DEFINES) $(INCPATH) $$join(QMAKE_COMPILER_DEFINES, " -D", -D) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-moc_source.output = $$MOC_DIR/$${QMAKE_CPP_MOD_MOC}${QMAKE_FILE_BASE}$${QMAKE_EXT_CPP_MOC}
-moc_source.input = SOURCES
-moc_source.name = MOC ${QMAKE_FILE_IN}
-silent:moc_source.commands = @echo moc ${QMAKE_FILE_IN} && $$moc_source.commands
-QMAKE_EXTRA_COMPILERS += moc_source
-
-#make sure we can include these files
-INCLUDEPATH += $$MOC_DIR 
-
-#auto depend on moc
-unix:!no_mocdepend {
-     moc_source.depends += $$first(QMAKE_MOC)
-     moc_header.depends += $$first(QMAKE_MOC)
-     !contains(TARGET, moc) { #auto build moc
-         isEmpty(QMAKE_MOC_SRC):QMAKE_MOC_SRC = "$(QTDIR)/src/tools/moc"
-	 make_moc.target = $$first(QMAKE_MOC)
-	 make_moc.commands = (cd $$QMAKE_MOC_SRC && $(MAKE))
-	 QMAKE_EXTRA_TARGETS += make_moc
-     }
-}
-
-#generate a mocclean
-build_pass|isEmpty(BUILDS):mocclean.depends = compiler_moc_header_clean compiler_moc_source_clean
-else:mocclean.CONFIG += recursive
-QMAKE_EXTRA_TARGETS += mocclean
-
-#generate a mocables
-build_pass|isEmpty(BUILDS):mocables.depends = compiler_moc_header_make_all compiler_moc_source_make_all
-else:mocables.CONFIG += recursive
-QMAKE_EXTRA_TARGETS += mocables
diff --git a/home/inferno/research/pitch/mkspecs/features/qt.prf b/home/inferno/research/pitch/mkspecs/features/qt.prf
deleted file mode 100644
index 030c03c..0000000
--- a/home/inferno/research/pitch/mkspecs/features/qt.prf
+++ /dev/null
@@ -1,188 +0,0 @@
-CONFIG *= moc thread
-
-#handle defines
-win32 {
-   shared:DEFINES += QT_DLL
-   !contains(DEFINES, QT_NODLL) {
-      QT_ENV_DLL = $$(QT_DLL)
-      QT_ENV_NO_DLL = $$(QT_NODLL)
-      !isEmpty(QT_ENV_DLL):isEmpty(QT_ENV_NO_DLL):DEFINES += QT_DLL
-      contains(DEFINES, QT_MAKEDLL)|contains(DEFINES, QT_DLL):QMAKE_QT_DLL = 1
-   }
-}
-CONFIG(release, debug|release):DEFINES += QT_NO_DEBUG
-no_keywords:DEFINES += QT_NO_KEYWORDS
-plugin { #Qt plugins
-   static:DEFINES += QT_STATICPLUGIN
-   DEFINES += QT_PLUGIN
-}
-
-#handle includes
-INCLUDEPATH = $$QMAKE_INCDIR_QT $$INCLUDEPATH #prepending prevents us from picking up "stale" includes
-win32:INCLUDEPATH += $$QMAKE_INCDIR_QT/ActiveQt
-
-# As order does matter for static libs, we reorder the QT variable here
-TMPLIBS = svg canvas qt3support sql xml opengl gui network core
-for(QTLIB, $$list($$TMPLIBS)) {
-   contains(QT, $$QTLIB): QT_ORDERED += $$QTLIB
-}
-
-QT = $$QT_ORDERED
-
-#specific module settings
-!isEmpty(QT_BUILD_TREE):QMAKE_LIBDIR = $$QT_BUILD_TREE/lib $$QMAKE_LIBDIR #as above, prepending prevents us from picking up "stale" libs
-QMAKE_LIBDIR += $$QMAKE_LIBDIR_QT
-for(QTLIB, $$list($$lower($$unique(QT)))) {
-   qlib_style = 
-   false:contains(QTLIB, ".*_debug$") {
-      qlib_style = debug
-      QTLIB ~= s,_debug$,,g
-   } else:false:contains(QTLIB, ".*_release$") {
-      qlib_style = release
-      QTLIB ~= s,_release$,,g
-   } else:!qt_debug:!qt_release {
-      CONFIG(debug, debug|release):qlib_style = debug
-      else:qlib_style = release
-   } else:CONFIG(qt_debug, qt_debug|qt_release) {
-      qlib_style = debug
-   } else {
-      qlib_style = release
-   }
-
-   qlib =
-   isEqual(QTLIB, gui):qlib = QtGui
-   else:isEqual(QTLIB, network):qlib = QtNetwork
-   else:isEqual(QTLIB, xml):qlib = QtXml
-   else:isEqual(QTLIB, opengl):qlib = QtOpenGL
-   else:isEqual(QTLIB, sql):qlib = QtSql
-   else:isEqual(QTLIB, core):qlib = QtCore
-   else:isEqual(QTLIB, canvas):qlib = QtCanvas
-   else:isEqual(QTLIB, qt3support):qlib = Qt3Support
-   else:isEqual(QTLIB, svg):qlib = QtSvg
-   else:message("Unknown QT: $$QTLIB"):qlib =
-   !isEmpty(qlib) {
-      target_qt:isEqual(TARGET, qlib) {
-         warning($$TARGET cannot have a QT of $$QTLIB)
-      } else {
-         DEFINES *= $$upper(QT_$${QTLIB}_LIB)
-	 exists($$QMAKE_INCDIR_QT/$$qlib) {
-             INCLUDEPATH -= $$QMAKE_INCDIR_QT/$$qlib
-             INCLUDEPATH = $$QMAKE_INCDIR_QT/$$qlib $$INCLUDEPATH
-         }
-	 isEqual(QTLIB, opengl):CONFIG += opengl
-	 isEqual(QTLIB, qt3support):DEFINES *= QT3_SUPPORT
-
-	 QT_LINKAGE =
-	 mac {
-	    CONFIG(qt_framework, qt_framework|qt_no_framework) { #forced
-	       QMAKE_CFLAGS *= -F$${QMAKE_LIBDIR_QT}
-	       QMAKE_CXXFLAGS *= -F$${QMAKE_LIBDIR_QT}
-	       QMAKE_LIBDIR_FLAGS *= -F$${QMAKE_LIBDIR_QT}
-	       FRAMEWORK_INCLUDE = $$QMAKE_LIBDIR_QT/$${qlib}.framework/Headers
-	       !qt_no_framework_direct_includes:exists($$FRAMEWORK_INCLUDE) {
-	          INCLUDEPATH -= $$FRAMEWORK_INCLUDE
-	          INCLUDEPATH = $$FRAMEWORK_INCLUDE $$INCLUDEPATH
-               }
-	       QT_LINKAGE = -framework $${qlib}
-            } else:!qt_no_framework { #detection
-  	       for(frmwrk_dir, $$list($$QMAKE_LIBDIR $$(DYLD_FRAMEWORK_PATH) /Library/Frameworks)) {
-	          exists($${frmwrk_dir}/$${qlib}.framework) {
-	            QMAKE_CFLAGS *= -F$${frmwrk_dir}
-	            QMAKE_CXXFLAGS *= -F$${frmwrk_dir}
-	            QMAKE_LIBDIR_FLAGS *= -F$${frmwrk_dir}
-	            FRAMEWORK_INCLUDE = $$frmwrk_dir/$${qlib}.framework/Headers
-	            !qt_no_framework_direct_includes:exists($$FRAMEWORK_INCLUDE) {
-	               INCLUDEPATH -= $$FRAMEWORK_INCLUDE
-	               INCLUDEPATH = $$FRAMEWORK_INCLUDE $$INCLUDEPATH
-                    }
-		    QT_LINKAGE = -framework $${qlib}
-		    break()
-                  }
-               }
-            }
-	 }
-	 false {
-	    QT_LINKAGE = -l$${qlib}
-	 } else:isEmpty(QT_LINKAGE) {
-            win32 {
-	       CONFIG(debug, debug|release):QT_LINKAGE = -l$${qlib}d
-	       else:QT_LINKAGE = -l$${qlib}
-	    } else { 
-	       isEqual(qlib_style, debug):QT_LINKAGE = -l$${qlib}_debug
-	       else:QT_LINKAGE = -l$${qlib}
-            }
-         }
-	 LIBS += $$QT_LINKAGE
-      }
-   }
-}
-for(QTPLUG, $$list($$lower($$unique(QTPLUGIN)))) {
-   qplugin_style = 
-   false:contains(QTPLUG, ".*_debug$") {
-      qplugin_style = debug
-      QTPLUG ~= s,_debug$,,g
-   } else:false:contains(QTPLUG, ".*_release$") {
-      qplugin_style = release
-      QTPLUG ~= s,_release$,,g
-   } else:!qt_debug:!qt_release {
-      CONFIG(debug, debug|release):qplugin_style = debug
-      else:qplugin_style = release
-   } else:CONFIG(qt_debug, qt_debug|qt_release) {
-      qplugin_style = debug
-   } else {
-      qplugin_style = release
-   }
-
-   # Check if the plugin is known to Qt. We can use this to determine
-   # the plugin path. Unknown plugins must rely on the default link path.
-   ACCESSIBLEPLUGINS = qtaccessiblewidgets qtaccessiblecompatwidgets
-   CODECPLUGINS = qcncodecs qjpcodecs qkrcodecs qtwcodecs
-   DECORATIONPLUGINS = qdecorationdefault qdecorationwindows
-   GFXDRIVERPLUGINS = qgfxvnc qscreenvfb qgfxsnap qgfxvga16 qgfxmatrox qgfxvoodoo qgfxtransformed qgfxshadowfb
-   IMAGEPLUGINS = qgif qmng qjpeg
-   INPUTPLUGINS = qimsw-multi
-   MOUSEDRIVERPLUGINS = qtslibmousehandler
-   SQLPLUGINS = qsqldb2 qsqloci qsqltds qsqlodbc qsqlpsql qsqlibase qsqlmysql qsqlite2 qsqlite
-
-   ALLQTPLUGINS = $$ACCESSIBLEPLUGINS $$CODECPLUGINS $$DECORATIONPLUGINS $$GFXDRIVERPLUGINS $$IMAGEPLUGINS $$INPUTPLUGINS $$MOUSEDRIVERPLUGINS $$SQLPLUGINS
-
-   QT_PLUGINPATH = 
-   contains(ALLQTPLUGINS, $$QTPLUG) {
-       # Determine the plugin path
-       contains(ACCESSIBLEPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/accessible/
-       contains(CODECPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/codecs/
-       contains(DECORATIONPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/decorations/
-       contains(GFXDRIVERPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/gfxdrivers/
-       contains(IMAGEPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/imageformats/
-       contains(INPUTPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/inputmethods/
-       contains(MOUSEDRIVERPLUGINS, $$QTPLUG): QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/mousedrivers/
-       contains(SQLPLUGINS, $$QTPLUG):  QT_PLUGINPATH = $$[QT_INSTALL_PLUGINS]/sqldrivers/
-    }
-
-    # Generate the plugin linker line
-    target_qt:isEqual(TARGET, QTPLUG) {
-       warning($$TARGET cannot have a QTPLUGIN of $$QTPLUG)
-    } else {
-       QT_LINKAGE =
-       false {
-          QT_LINKAGE = -l$${QTPLUG}
-       } else:isEmpty(QT_LINKAGE) {
-          win32 {
-             CONFIG(debug, debug|release):QT_LINKAGE = -l$${QTPLUG}d
-             else:QT_LINKAGE = -l$${QTPLUG}
-          } else { 
-             isEqual(qplugin_style, debug):QT_LINKAGE = -l$${QTPLUG}_debug
-             else:QT_LINKAGE = -l$${QTPLUG}
-          }
-       }
-       
-       !isEmpty($$QT_PLUGINPATH): LIBS += -L$$QT_PLUGINPATH
-       LIBS += $$QT_LINKAGE
-    }
-}
-
-qt_compat {
-   !qt_compat_no_warning:QTDIR_build:warning(***USE of COMPAT inside of QTDIR!**) #just for us
-   INCLUDEPATH *= $$QMAKE_INCDIR_QT/Qt
-   DEFINES *= QT_COMPAT
-}
diff --git a/home/inferno/research/pitch/mkspecs/features/qt_config.prf b/home/inferno/research/pitch/mkspecs/features/qt_config.prf
deleted file mode 100644
index 69e3e09..0000000
--- a/home/inferno/research/pitch/mkspecs/features/qt_config.prf
+++ /dev/null
@@ -1,11 +0,0 @@
-exists($$_QMAKE_CACHE_):QMAKE_QT_CONFIG = $$fromfile($$_QMAKE_CACHE_, QMAKE_QT_CONFIG)
-isEmpty(QMAKE_QT_CONFIG)|!exists($$QMAKE_QT_CONFIG) {
-   !isEmpty(QT_BUILD_TREE):QMAKE_QT_CONFIG = $$QT_BUILD_TREE/mkspecs/qconfig.pri
-   else:exists($$_QMAKE_CACHE_):infile($$_QMAKE_CACHE_, QT_BUILD_TREE):QMAKE_QT_CONFIG = $$fromfile($$_QMAKE_CACHE_, QT_BUILD_TREE)/mkspecs/qconfig.pri
-   else:exists($$[QT_INSTALL_DATA]/mkspecs/qconfig.pri):QMAKE_QT_CONFIG = $$[QT_INSTALL_DATA]/mkspecs/qconfig.pri
-}
-!exists($$QMAKE_QT_CONFIG)|!include($$QMAKE_QT_CONFIG) {
-   debug(1, "Cannot load qconfig.pri!")
-} else {
-   debug(1, "Loaded .qconfig.pri from ($$QMAKE_QT_CONFIG)")
-}
diff --git a/home/inferno/research/pitch/mkspecs/features/release.prf b/home/inferno/research/pitch/mkspecs/features/release.prf
deleted file mode 100644
index b774ead..0000000
--- a/home/inferno/research/pitch/mkspecs/features/release.prf
+++ /dev/null
@@ -1,5 +0,0 @@
-CONFIG -= debug
-QMAKE_CFLAGS += $$QMAKE_CFLAGS_RELEASE
-QMAKE_CXXFLAGS += $$QMAKE_CXXFLAGS_RELEASE
-QMAKE_LFLAGS += $$QMAKE_LFLAGS_RELEASE
-!debug_and_release:fix_output_dirs:fixExclusiveOutputDirs(release, debug)
\ No newline at end of file
diff --git a/home/inferno/research/pitch/mkspecs/features/resources.prf b/home/inferno/research/pitch/mkspecs/features/resources.prf
deleted file mode 100644
index 714798e..0000000
--- a/home/inferno/research/pitch/mkspecs/features/resources.prf
+++ /dev/null
@@ -1,32 +0,0 @@
-isEmpty(QMAKE_RCC) {
-    win32:QMAKE_RCC = $$[QT_INSTALL_BINS]\rcc.exe
-    else:QMAKE_RCC = $$[QT_INSTALL_BINS]/rcc
-}
-
-isEmpty(RCC_DIR):RCC_DIR = .
-isEmpty(QMAKE_RESOURCE_PREFIX):QMAKE_RESOURCE_PREFIX = /tmp/
-isEmpty(QMAKE_MOD_RCC):QMAKE_MOD_RCC = qrc
-
-resource_combine {
-   rcc.CONFIG += combine
-   rcc.output  = $$RCC_DIR/$${first(QMAKE_MOD_RCC)}_combined$${first(QMAKE_EXT_CPP)}
-} else {
-   rcc.output = $$RCC_DIR/$${first(QMAKE_MOD_RCC)}_${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
-}
-!contains(QMAKE_RESOURCE_FLAGS, -root):!isEmpty(QMAKE_RESOURCE_ROOT):QMAKE_RESOURCE_FLAGS += -root $$QMAKE_RESOURCE_ROOT
-!contains(QMAKE_RESOURCE_FLAGS, -name) {
-    resource_combine {
-       isEmpty(QMAKE_RESOURCE_NAME):!isEmpty(TARGET):QMAKE_RESOURCE_NAME = $$TARGET
-       !isEmpty(QMAKE_RESOURCE_NAME):QMAKE_RESOURCE_FLAGS += -name $$QMAKE_RESOURCE_NAME
-    } else {
-       QMAKE_RESOURCE_FLAGS += -name ${QMAKE_FILE_BASE}
-    }
-}
-rcc.commands = $$QMAKE_RCC $$QMAKE_RESOURCE_FLAGS ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-rcc.depends = $$QMAKE_RCC
-rcc.depend_command = $$QMAKE_RCC -list $$QMAKE_RESOURCE_FLAGS ${QMAKE_FILE_IN}
-rcc.input = RESOURCES
-rcc.variable_out = SOURCES
-rcc.name = RCC ${QMAKE_FILE_IN}
-silent:rcc.commands = @echo rcc ${QMAKE_FILE_IN} && $$rcc.commands
-QMAKE_EXTRA_COMPILERS += rcc
diff --git a/home/inferno/research/pitch/mkspecs/features/uic.prf b/home/inferno/research/pitch/mkspecs/features/uic.prf
deleted file mode 100644
index b9811dd..0000000
--- a/home/inferno/research/pitch/mkspecs/features/uic.prf
+++ /dev/null
@@ -1,86 +0,0 @@
-
-isEmpty(QMAKE_UIC3) {
-    win32:QMAKE_UIC3 = $$[QT_INSTALL_BINS]\uic3.exe
-    else:QMAKE_UIC3 = $$[QT_INSTALL_BINS]/uic3
-}
-
-isEmpty(QMAKE_UIC) {
-   win32:QMAKE_UIC = $$[QT_INSTALL_BINS]\uic.exe
-   else:QMAKE_UIC = $$[QT_INSTALL_BINS]/uic
-}
-
-isEmpty(UI_DIR):UI_DIR = .
-isEmpty(UI_SOURCES_DIR):UI_SOURCES_DIR = $$UI_DIR
-isEmpty(UI_HEADERS_DIR):UI_HEADERS_DIR = $$UI_DIR
-
-
-# Allow FORMS3 to contain old UIC3 forms, while FORMS contains new
-# UIC files in the same project. However, if CONFIG+=uic3 and no
-# FORMS3 is defined, FORMS may only contain old UIC3 files.
-
-!uic3|!isEmpty(FORMS3) {
-    # If we have CONFIG+=uic3 and no FORMS3, then don't do this step,
-    # as UIC3 files don't need a ui_<formname>.h file
-
-    uic.commands = $$QMAKE_UIC ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-    uic.depend_command = $$QMAKE_UIC -d ${QMAKE_FILE_IN}
-    uic.output = $$UI_HEADERS_DIR/ui_${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
-    uic.input = FORMS
-    uic.variable_out = GENERATED_FILES
-    uic.CONFIG += no_link
-    uic.name = UIC ${QMAKE_FILE_IN}
-    silent:uic.commands = @echo uic ${QMAKE_FILE_IN} && $$uic.commands
-    QMAKE_EXTRA_COMPILERS += uic
-}
-
-INCLUDEPATH += $$UI_HEADERS_DIR
-
-uic3 {
-    isEmpty(FORMS3) {
-        UIC3_FORMS = FORMS
-        !build_pass:message("Project contains CONFIG+=uic3, but no files in FORMS3; .ui files in FORMS treated as UIC3 form files.")
-    } else {
-        UIC3_FORMS = FORMS3
-    }
-    
-    uic3_decl.commands = $$QMAKE_UIC3 ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-    uic3_decl.dependency_type = TYPE_UI
-    uic3_decl.output = $$UI_HEADERS_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
-    uic3_decl.input = $$UIC3_FORMS
-    uic3_decl.CONFIG += no_link
-    uic3_decl.variable_out = GENERATED_FILES UIC3_HEADERS
-    uic3_decl.name = UIC3 Decl ${QMAKE_FILE_IN}
-    silent:uic3_decl.commands = @echo uic3 ${QMAKE_FILE_IN} && $$uic3_decl.commands
-    QMAKE_EXTRA_COMPILERS += uic3_decl
-
-    uic3_impl.commands = $$QMAKE_UIC3 -impl ${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)} ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-    uic3_impl.dependency_type = TYPE_UI
-    uic3_impl.output = $$UI_SOURCES_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
-    uic3_impl.depends = $$UI_HEADERS_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
-    uic3_impl.input = $$UIC3_FORMS
-    uic3_impl.variable_out = GENERATED_SOURCES
-    uic3_impl.name = UIC3 Impl ${QMAKE_FILE_IN}
-    silent:uic3_impl.commands = @echo uic3 -impl ${QMAKE_FILE_IN} && $$uic3_impl.commands
-    QMAKE_EXTRA_COMPILERS += uic3_impl
-
-    ### add a moc step
-    load(moc)
-    uic3_moc.commands = $$moc_header.commands
-    uic3_moc.output = $$moc_header.output
-    uic3_moc.depends = $$UI_HEADERS_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
-    uic3_moc.input = UIC3_HEADERS
-    uic3_moc.variable_out = GENERATED_SOURCES
-    uic3_moc.name = $$moc_header.name
-    QMAKE_EXTRA_COMPILERS += uic3_moc
-}
-
-image_collection.output = qmake_image_collection$${first(QMAKE_EXT_CPP)}
-image_collection.variable_out = SOURCES
-image_collection.input = IMAGES
-image_collection.CONFIG += combine
-image_collection.name = UIC3 Image collection in ${QMAKE_FILE_OUT}
-image_collection.commands = $$QMAKE_UIC3 -embed $$TARGET ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-silent:image_collection.commands = @echo uic3 -embed ${QMAKE_FILE_IN} && $$image_collection.commands
-QMAKE_EXTRA_COMPILERS += image_collection
-
-
diff --git a/home/inferno/research/pitch/mkspecs/features/unix/opengl.prf b/home/inferno/research/pitch/mkspecs/features/unix/opengl.prf
deleted file mode 100644
index 231d0aa..0000000
--- a/home/inferno/research/pitch/mkspecs/features/unix/opengl.prf
+++ /dev/null
@@ -1,4 +0,0 @@
-INCLUDEPATH += $$QMAKE_INCDIR_OPENGL
-!isEmpty(QMAKE_LIBDIR_OPENGL):QMAKE_LIBDIR += $$QMAKE_LIBDIR_OPENGL
-target_qt:LIBS += $$QMAKE_LIBS_OPENGL_QT
-else:LIBS += $$QMAKE_LIBS_OPENGL
diff --git a/home/inferno/research/pitch/mkspecs/features/unix/thread.prf b/home/inferno/research/pitch/mkspecs/features/unix/thread.prf
deleted file mode 100644
index d6df7b6..0000000
--- a/home/inferno/research/pitch/mkspecs/features/unix/thread.prf
+++ /dev/null
@@ -1,14 +0,0 @@
-!isEmpty(QMAKE_CFLAGS_THREAD) {
-   QMAKE_CFLAGS += $$QMAKE_CFLAGS_THREAD
-   QMAKE_EXPORT_CFLAGS += $$QMAKE_CFLAGS_THREAD
-}
-!isEmpty(QMAKE_CXXFLAGS_THREAD) {
-   QMAKE_CXXFLAGS += $$QMAKE_CXXFLAGS_THREAD
-   QMAKE_EXPORT_CXXFLAGS += $$QMAKE_CXXFLAGS_THREAD
-}
-INCLUDEPATH += $$QMAKE_INCDIR_THREAD
-LIBS += $$QMAKE_LIBS_THREAD
-!isEmpty(QMAKE_LFLAGS_THREAD):QMAKE_LFLAGS += $$QMAKE_LFLAGS_THREAD
-!isEmpty(QMAKE_CC_THREAD):QMAKE_CC = $$QMAKE_CC_THREAD
-!isEmpty(QMAKE_CXX_THREAD):QMAKE_CXX = $$QMAKE_CXX_THREAD
-!isEmpty(QMAKE_LINK_THREAD):QMAKE_LINK = $$QMAKE_LINK_THREAD
diff --git a/home/inferno/research/pitch/mkspecs/features/warn_off.prf b/home/inferno/research/pitch/mkspecs/features/warn_off.prf
deleted file mode 100644
index 072a7ac..0000000
--- a/home/inferno/research/pitch/mkspecs/features/warn_off.prf
+++ /dev/null
@@ -1,3 +0,0 @@
-CONFIG -= warn_on
-QMAKE_CFLAGS += $$QMAKE_CFLAGS_WARN_OFF
-QMAKE_CXXFLAGS += $$QMAKE_CXXFLAGS_WARN_OFF
diff --git a/usr/local/Trolltech/Qt-4.2.3/mkspecs/qconfig.pri b/usr/local/Trolltech/Qt-4.2.3/mkspecs/qconfig.pri
deleted file mode 100644
index e2cf92f..0000000
--- a/usr/local/Trolltech/Qt-4.2.3/mkspecs/qconfig.pri
+++ /dev/null
@@ -1,13 +0,0 @@
-#configuration
-CONFIG +=  release stl qt_no_framework
-QT_ARCH = i386
-QT_EDITION = OpenSource
-QT_CONFIG +=  qt3support accessibility opengl minimal-config small-config medium-config large-config full-config reduce_exports ipv6 getaddrinfo ipv6ifname getifaddrs system-jpeg system-mng system-png png no-gif system-freetype system-zlib nis cups iconv glib x11sm xshape xinerama xcursor xfixes xrandr xrender fontconfig tablet xkb release
-
-#versioning
-QT_VERSION = 4.2.3
-QT_MAJOR_VERSION = 4
-QT_MINOR_VERSION = 2
-QT_PATCH_VERSION = 3
-
-QMAKE_RPATHDIR += "/usr/local/Trolltech/Qt-4.2.3/lib"
-- 
